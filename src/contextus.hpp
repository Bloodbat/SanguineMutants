#pragma once

#include "sanguinecomponents.hpp"

static const std::vector<std::string> contextusDisplayLabels = {
    "CSAW",
    "/\\-_",
    "//-_",
    "FOLD",
    "uuuu",
    "SUB-",
    "SUB/",
    "SYN-",
    "SYN/",
    "//x3",
    "-_x3",
    "/\\x3",
    "SIx3",
    "RING",
    "\\\\CH",
    "-_CH",
    "/\\CH",
    "SICH",
    "WTCH",
    "\\\\x6",
    "-_x6",
    "/\\x6",
    "SIx6",
    "WTx6",
    "////",
    "//uu",
    "TOY*",
    "ZLPF",
    "ZPKF",
    "ZBPF",
    "ZHPF",
    "VOSM",
    "VOWL",
    "VFOF",
    "HARM",
    "FM  ",
    "FBFM",
    "WTFM",
    "PLUK",
    "BOWD",
    "BLOW",
    "FLUT",
    "BELL",
    "DRUM",
    "KICK",
    "CYMB",
    "SNAR",
    "WTBL",
    "WMAP",
    "WLIN",
    "SAM1",
    "SAM2",
    "NOIS",
    "TWNQ",
    "CLKN",
    "CLOU",
    "PRTC"
};

static const std::vector<std::string> contextusMenuLabels = {
    "Quirky sawtooth",
    "Triangle to saw",
    "Sawtooth wave with dephasing",
    "Wavefolded sine/triangle",
    "Buzz",
    "Square sub",
    "Saw sub",
    "Square sync",
    "Saw sync",
    "Triple saw",
    "Triple square",
    "Triple triangle",
    "Triple sine",
    "Triple ring mod",
    "Saw diatonic chords",
    "Square diatonic chords",
    "Triangle diatonic chords",
    "Sine diatonic chords",
    "Wavetable diatonic chords",
    "Saw chord stack",
    "Square chord stack",
    "Triangle chord stack",
    "Sine chord stack",
    "Wavetable chord stack",
    "Saw swarm",
    "Saw comb",
    "Circuit-bent toy",
    "Low-pass filtered waveform",
    "Peak filtered waveform",
    "Band-pass filtered waveform",
    "High-pass filtered waveform",
    "VOSIM formant",
    "Speech synthesis",
    "FOF speech synthesis",
    "12 sine harmonics",
    "2-operator phase-modulation",
    "2-operator phase-modulation with feedback",
    "2-operator phase-modulation with chaotic feedback",
    "Plucked string",
    "Bowed string",
    "Blown reed",
    "Flute",
    "Bell",
    "Drum",
    "Kick drum circuit simulation",
    "Cymbal",
    "Snare",
    "Wavetable",
    "2D wavetable",
    "1D wavetable",
    "Software Automated Mouth 1",
    "Software Automated Mouth 2",
    "Filtered noise",
    "Twin peaks noise",
    "Clocked noise",
    "Granular cloud",
    "Particle noise"
};

static const RGBLightColor contextusLightColors[57]{
{1.f, 0.f, 0.f},
{0.9474f, 0.f, 0.0526f},
{0.8948f, 0.f, 0.1052f},
{0.8422f, 0.f, 0.1578f},
{0.7896f, 0.f, 0.2104f},
{0.737f, 0.f, 0.263f},
{0.6844f, 0.f, 0.3156f},
{0.6318f, 0.f, 0.3682f},
{0.5792f, 0.f, 0.4208f},
{0.5266f, 0.f, 0.4734f},
{0.474f, 0.f, 0.526f},
{0.4214f, 0.f, 0.5786f},
{0.3688f, 0.f, 0.6312f},
{0.3162f, 0.f, 0.6838f},
{0.2636f, 0.f, 0.7364f},
{0.211f, 0.f, 0.789f},
{0.1584f, 0.f, 0.8416f},
{0.1058f, 0.f, 0.8942f},
{0.0532000000000003f, 0.f, 0.9468f},
{0.f, 0.f, 1.f},
{0.f, 0.0526f, 0.9474f},
{0.f, 0.1052f, 0.8948f},
{0.f, 0.1578f, 0.8422f},
{0.f, 0.2104f, 0.7896f},
{0.f, 0.263f, 0.737f},
{0.f, 0.3156f, 0.6844f},
{0.f, 0.3682f, 0.6318f},
{0.f, 0.4208f, 0.5792f},
{0.f, 0.4734f, 0.5266f},
{0.f, 0.526f, 0.474f},
{0.f, 0.5786f, 0.4214f},
{0.f, 0.6312f, 0.3688f},
{0.f, 0.6838f, 0.3162f},
{0.f, 0.7364f, 0.2636f},
{0.f, 0.789f, 0.211f},
{0.f, 0.8416f, 0.1584f},
{0.f, 0.8942f, 0.1058f},
{0.f, 0.9468f, 0.0532000000000003f},
{0.f, 1.f, 0.f},
{0.0526f, 0.9474f, 0.0526f},
{0.1052f, 0.8948f, 0.1052f},
{0.1578f, 0.8422f, 0.1578f},
{0.2104f, 0.7896f, 0.2104f},
{0.263f, 0.737f, 0.263f},
{0.3156f, 0.6844f, 0.3156f},
{0.3682f, 0.6318f, 0.3682f},
{0.4208f, 0.5792f, 0.4208f},
{0.4734f, 0.5266f, 0.4734f},
{0.526f, 0.474f, 0.526f},
{0.5786f, 0.4214f, 0.5786f},
{0.6312f, 0.3688f, 0.6312f},
{0.6838f, 0.3162f, 0.6838f},
{0.7364f, 0.2636f, 0.7364f},
{0.789f, 0.211f, 0.789f},
{0.8416f, 0.1584f, 0.8416f},
{0.8942f, 0.1058f, 0.8942f},
{0.9468f, 0.0532000000000003f, 0.9468f}
};