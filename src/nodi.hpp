#pragma once

#include "sanguinecomponents.hpp"

static const std::vector<std::string> nodiDisplayLabels = {
    "CSAW",
    "/\\-_",
    "//-_",
    "FOLD",
    "uuuu",
    "SUB-",
    "SUB/",
    "SYN-",
    "SYN/",
    "//x3",
    "-_x3",
    "/\\x3",
    "SIx3",
    "RING",
    "////",
    "//uu",
    "TOY*",
    "ZLPF",
    "ZPKF",
    "ZBPF",
    "ZHPF",
    "VOSM",
    "VOWL",
    "VFOF",
    "HARM",
    "FM  ",
    "FBFM",
    "WTFM",
    "PLUK",
    "BOWD",
    "BLOW",
    "FLUT",
    "BELL",
    "DRUM",
    "KICK",
    "CYMB",
    "SNAR",
    "WTBL",
    "WMAP",
    "WLIN",
    "WTx4",
    "NOIS",
    "TWNQ",
    "CLKN",
    "CLOU",
    "PRTC",
    "QPSK",
    "  49" // "Paques"
};

static const std::vector<std::string> nodiMenuLabels = {
    "Quirky sawtooth",
    "Triangle to saw",
    "Sawtooth wave with dephasing",
    "Wavefolded sine/triangle",
    "Buzz",
    "Square sub",
    "Saw sub",
    "Square sync",
    "Saw sync",
    "Triple saw",
    "Triple square",
    "Triple triangle",
    "Triple sine",
    "Triple ring mod",
    "Saw swarm",
    "Saw comb",
    "Circuit-bent toy",
    "Low-pass filtered waveform",
    "Peak filtered waveform",
    "Band-pass filtered waveform",
    "High-pass filtered waveform",
    "VOSIM formant",
    "Speech synthesis",
    "FOF speech synthesis",
    "12 sine harmonics",
    "2-operator phase-modulation",
    "2-operator phase-modulation with feedback",
    "2-operator phase-modulation with chaotic feedback",
    "Plucked string",
    "Bowed string",
    "Blown reed",
    "Flute",
    "Bell",
    "Drum",
    "Kick drum circuit simulation",
    "Cymbal",
    "Snare",
    "Wavetable",
    "2D wavetable",
    "1D wavetable",
    "4-voice paraphonic 1D wavetable",
    "Filtered noise",
    "Twin peaks noise",
    "Clocked noise",
    "Granular cloud",
    "Particle noise",
    "Digital modulation",
    "Paques morse code" // "Paques"
};

static const RGBLightColor nodiLightColors[48]{
{1.f, 0.f, 0.f},
{0.9375f, 0.f, 0.0625f},
{0.875f, 0.f, 0.125f},
{0.8125f, 0.f, 0.1875f},
{0.75f, 0.f, 0.25f},
{0.6875f, 0.f, 0.3125f},
{0.625f, 0.f, 0.375f},
{0.5625f, 0.f, 0.4375f},
{0.5f, 0.f, 0.5f},
{0.4375f, 0.f, 0.5625f},
{0.375f, 0.f, 0.625f},
{0.3125f, 0.f, 0.6875f},
{0.25f, 0.f, 0.75f},
{0.1875f, 0.f, 0.8125f},
{0.125f, 0.f, 0.875f},
{0.0625f, 0.f, 0.9375f},
{0.f, 0.f, 1.f},
{0.f, 0.125f, 0.875f},
{0.f, 0.1875f, 0.8125f},
{0.f, 0.25f, 0.75f},
{0.f, 0.3125f, 0.6875f},
{0.f, 0.375f, 0.625f},
{0.f, 0.4375f, 0.5625f},
{0.f, 0.5f, 0.5f},
{0.f, 0.5625f, 0.4375f},
{0.f, 0.625f, 0.375f},
{0.f, 0.6875f, 0.3125f},
{0.f, 0.75f, 0.25f},
{0.f, 0.8125f, 0.1875f},
{0.f, 0.875f, 0.125f},
{0.f, 0.9375f, 0.0625f},
{0.f,1.f, 0.f},
{0.0625f, 0.9375f, 0.f},
{0.125f, 0.875f, 0.f},
{0.1875f, 0.8125f, 0.f},
{0.25f, 0.75f, 0.f},
{0.3125f, 0.6875f, 0.f},
{0.375f, 0.625f, 0.f},
{0.4375f, 0.5625f, 0.f},
{0.5f, 0.5f, 0.f},
{0.5625f, 0.4375f, 0.f},
{0.625f, 0.375f, 0.f},
{0.6875f, 0.3125f, 0.f},
{0.75f, 0.25f, 0.f},
{0.8125f, 0.1875f, 0.f},
{0.875f, 0.125f, 0.f},
{0.9375f, 0.0625f, 0.f},
{1.f, 1.f, 1.f}
};